****Error en [lin 6, col 3]: simbolo no permitido ($)
TOK_ERROR	-1  $
****Error en [lin 7, col 1]: simbolo no permitido (^)
TOK_ERROR	-1  ^
****Error en [lin 7, col 3]: simbolo no permitido (¿)
TOK_ERROR	-1  ¿
****Error en [lin 7, col 5]: simbolo no permitido (?)
TOK_ERROR	-1  ?
****Error en [lin 7, col 7]: simbolo no permitido (%)
TOK_ERROR	-1  %
****Error en [lin 7, col 9]: simbolo no permitido (#)
TOK_ERROR	-1  #
****Error en [lin 7, col 11]: simbolo no permitido (@)
TOK_ERROR	-1  @
TOK_IDENTIFICADOR	300 intmain
TOK_IDENTIFICADOR	300 scanfprintf
TOK_IDENTIFICADOR	300 identificadormaximoidentificadormaximoidentificadormaximoidentificad
TOK_MAIN	100 main
TOK_LLAVEIZQUIERDA	206 {
TOK_BOOLEAN	102 boolean
TOK_IDENTIFICADOR	300 identificador1
TOK_COMA	201 ,
TOK_IDENTIFICADOR	300 identificador2
TOK_COMA	201 ,
****Error en [lin 15, col 45]: identificador demasiado largo (identificadormuymuymuymuymuymuymuymuuuuuyyyyyylaaaaaaaaaaaaaaaaaaaaaaaaaaaaargoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo)
TOK_ERROR	-1  identificadormuymuymuymuymuymuymuymuuuuuyyyyyylaaaaaaaaaaaaaaaaaaaaaaaaaaaaargoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
TOK_PUNTOYCOMA	200 ;
TOK_ARRAY	103 array
TOK_INT	101 int
TOK_CORCHETEIZQUIERDO	204 [
TOK_CONSTANTE_ENTERA	400 20
TOK_CORCHETEDERECHO	205 ]
TOK_IDENTIFICADOR	300 array1
TOK_PUNTOYCOMA	200 ;
TOK_INT	101 int
TOK_IDENTIFICADOR	300 x
TOK_PUNTOYCOMA	200 ;
TOK_INT	101 int
TOK_IDENTIFICADOR	300 i
TOK_PUNTOYCOMA	200 ;
TOK_FUNCTION	104 function
TOK_BOOLEAN	102 boolean
TOK_IDENTIFICADOR	300 fprueba
TOK_PARENTESISIZQUIERDO	202 (
TOK_INT	101 int
TOK_IDENTIFICADOR	300 numero
TOK_PARENTESISDERECHO	203 )
TOK_LLAVEIZQUIERDA	206 {
TOK_IF	105 if
TOK_PARENTESISIZQUIERDO	202 (
TOK_PARENTESISIZQUIERDO	202 (
TOK_IDENTIFICADOR	300 numero
TOK_DISTINTO	217 !=
TOK_CONSTANTE_ENTERA	400 13
TOK_PARENTESISDERECHO	203 )
TOK_PARENTESISDERECHO	203 )
TOK_LLAVEIZQUIERDA	206 {
TOK_RETURN	110 return
TOK_TRUE	401 true
TOK_PUNTOYCOMA	200 ;
TOK_LLAVEDERECHA	207 }
TOK_ELSE	106 else
TOK_LLAVEIZQUIERDA	206 {
TOK_RETURN	110 return
TOK_FALSE	402 false
TOK_PUNTOYCOMA	200 ;
TOK_LLAVEDERECHA	207 }
TOK_LLAVEDERECHA	207 }
TOK_IDENTIFICADOR	300 i
TOK_ASIGNACION	208 =
TOK_CONSTANTE_ENTERA	400 1
TOK_PUNTOYCOMA	200 ;
TOK_WHILE	107 while
TOK_PARENTESISIZQUIERDO	202 (
TOK_PARENTESISIZQUIERDO	202 (
TOK_IDENTIFICADOR	300 i
TOK_MENOR	220 <
TOK_CONSTANTE_ENTERA	400 10
TOK_PARENTESISDERECHO	203 )
TOK_PARENTESISDERECHO	203 )
TOK_LLAVEIZQUIERDA	206 {
TOK_SCANF	108 scanf
TOK_IDENTIFICADOR	300 x
TOK_PUNTOYCOMA	200 ;
TOK_IDENTIFICADOR	300 array1
TOK_CORCHETEIZQUIERDO	204 [
TOK_IDENTIFICADOR	300 i
TOK_CORCHETEDERECHO	205 ]
TOK_ASIGNACION	208 =
TOK_IDENTIFICADOR	300 x
TOK_MENOS	210 -
TOK_CONSTANTE_ENTERA	400 15
TOK_MAS	209 +
TOK_CONSTANTE_ENTERA	400 2
TOK_DIVISION	211 /
TOK_CONSTANTE_ENTERA	400 2
TOK_ASTERISCO	212 *
TOK_CONSTANTE_ENTERA	400 7
TOK_PUNTOYCOMA	200 ;
TOK_IDENTIFICADOR	300 identificador1
TOK_ASIGNACION	208 =
TOK_IDENTIFICADOR	300 fprueba
TOK_PARENTESISIZQUIERDO	202 (
TOK_IDENTIFICADOR	300 array1
TOK_CORCHETEIZQUIERDO	204 [
TOK_IDENTIFICADOR	300 i
TOK_CORCHETEDERECHO	205 ]
TOK_PARENTESISDERECHO	203 )
TOK_PUNTOYCOMA	200 ;
TOK_IF	105 if
TOK_PARENTESISIZQUIERDO	202 (
TOK_IDENTIFICADOR	300 identificador1
TOK_PARENTESISDERECHO	203 )
TOK_LLAVEIZQUIERDA	206 {
TOK_PRINTF	109 printf
TOK_IDENTIFICADOR	300 identificador1
TOK_PUNTOYCOMA	200 ;
TOK_LLAVEDERECHA	207 }
TOK_IDENTIFICADOR	300 i
TOK_ASIGNACION	208 =
TOK_IDENTIFICADOR	300 i
TOK_MAS	209 +
TOK_CONSTANTE_ENTERA	400 1
TOK_PUNTOYCOMA	200 ;
TOK_LLAVEDERECHA	207 }
TOK_IF	105 if
TOK_PARENTESISIZQUIERDO	202 (
TOK_PARENTESISIZQUIERDO	202 (
TOK_IDENTIFICADOR	300 array1
TOK_CORCHETEIZQUIERDO	204 [
TOK_CONSTANTE_ENTERA	400 2
TOK_CORCHETEDERECHO	205 ]
TOK_DISTINTO	217 !=
TOK_CONSTANTE_ENTERA	400 20
TOK_PARENTESISDERECHO	203 )
TOK_AND	213 &&
TOK_PARENTESISIZQUIERDO	202 (
TOK_IDENTIFICADOR	300 array1
TOK_CORCHETEIZQUIERDO	204 [
TOK_CONSTANTE_ENTERA	400 5
TOK_CORCHETEDERECHO	205 ]
TOK_IGUAL	216 ==
TOK_CONSTANTE_ENTERA	400 42
TOK_PARENTESISDERECHO	203 )
TOK_OR	214 ||
TOK_PARENTESISIZQUIERDO	202 (
TOK_IDENTIFICADOR	300 array1
TOK_CORCHETEIZQUIERDO	204 [
TOK_CONSTANTE_ENTERA	400 3
TOK_CORCHETEDERECHO	205 ]
TOK_MENORIGUAL	218 <=
TOK_CONSTANTE_ENTERA	400 20
TOK_PARENTESISDERECHO	203 )
TOK_OR	214 ||
TOK_PARENTESISIZQUIERDO	202 (
TOK_IDENTIFICADOR	300 array1
TOK_CORCHETEIZQUIERDO	204 [
TOK_CONSTANTE_ENTERA	400 7
TOK_CORCHETEDERECHO	205 ]
TOK_MAYORIGUAL	219 >=
TOK_CONSTANTE_ENTERA	400 3
TOK_PARENTESISDERECHO	203 )
TOK_OR	214 ||
TOK_NOT	215 !
TOK_PARENTESISIZQUIERDO	202 (
TOK_IDENTIFICADOR	300 array1
TOK_CORCHETEIZQUIERDO	204 [
TOK_CONSTANTE_ENTERA	400 5
TOK_CORCHETEDERECHO	205 ]
TOK_MENOR	220 <
TOK_CONSTANTE_ENTERA	400 90
TOK_PARENTESISDERECHO	203 )
TOK_OR	214 ||
TOK_PARENTESISIZQUIERDO	202 (
TOK_IDENTIFICADOR	300 array1
TOK_CORCHETEIZQUIERDO	204 [
TOK_CONSTANTE_ENTERA	400 20
TOK_CORCHETEDERECHO	205 ]
TOK_MAYOR	221 >
TOK_CONSTANTE_ENTERA	400 21789
TOK_PARENTESISDERECHO	203 )
TOK_PARENTESISDERECHO	203 )
TOK_LLAVEIZQUIERDA	206 {
TOK_PRINTF	109 printf
TOK_IDENTIFICADOR	300 array1
TOK_CORCHETEIZQUIERDO	204 [
TOK_CONSTANTE_ENTERA	400 9
TOK_CORCHETEDERECHO	205 ]
TOK_PUNTOYCOMA	200 ;
TOK_LLAVEDERECHA	207 }
TOK_LLAVEDERECHA	207 }
