package es.uam.eps.bmi.search;

import es.uam.eps.bmi.search.indexing.Index;
import es.uam.eps.bmi.search.indexing.LuceneIndex;
import es.uam.eps.bmi.search.indexing.Posting;
import es.uam.eps.bmi.search.parsing.HTMLSimpleParser;
import es.uam.eps.bmi.search.parsing.TextParser;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.*;

public class TextIndex {

	void sort(String terms[], int freqs[]) {
        SortedMap<Integer, String> map = new TreeMap<Integer, String>(new Comparator<Integer>() {
            public int compare(Integer n, Integer m) { return m - n; }
        });
        for (int i = 0; i < terms.length; i++) map.put(freqs[i], terms[i]);
        Iterator iter = map.entrySet().iterator();
        for (int i = 0; iter.hasNext(); i++) {
            Map.Entry<Integer, String> entry = (Map.Entry<Integer, String>) iter.next();
            terms[i] = entry.getValue();
            freqs[i] = entry.getKey();
        }
    }
	
	public static void main(String [] args) throws IOException{
		File f = new File(args[2]);
		FileWriter fw = new FileWriter(f);
		Index i = new LuceneIndex();
		TextParser parser= new HTMLSimpleParser();
		//i.build(args[0], args[1], parser);
		i.load(args[1]);
		
		List<String> terms = i.getTerms();
		List<Integer> freqs = new ArrayList<Integer>();
		
		for(String s : terms){
			List<Posting> post= i.getTermPostings(s);
			int freq =0;
			for(Posting p : post){
				freq+= p.getTermFrequency();
			}
			freqs.add(freq);
		}
		
		sort(terms.toArray(),freqs.toArray());
		
		for(String s : terms){
			List<Posting> post= i.getTermPostings(s);
			int freq =0;
			for(Posting p : post){
				freq+= p.getTermFrequency();
			}
			freqs.add(freq);
			fw.write(s+" "+freq+" "+post.size()+"\n");
		}
		fw.close();
	}
}
