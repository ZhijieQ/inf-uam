package clasificadores;
import datos.*;
import particionado.*;
import java.util.ArrayList;

abstract public class Clasificador {
	abstract public void entrenamiento (Datos datosTrain);
	abstract public ArrayList<Integer> clasifica (Datos datosTest);
	
	abstract public ArrayList<Integer> getResultado();
	
	public static double error (Datos datos, Clasificador clas) {
		int i=0, error=0;
		for(; i<datos.getNumDatos(); i++){
			//System.out.println("	Real: "+datos.getDato(i, datos.getSizeTipoAtributos()-1)+ "		Prediccion: "+ clas.getResultado().get(i)*1.0);
			if(datos.getDato(i, datos.getSizeTipoAtributos()-1) != clas.getResultado().get(i)*1.0)
				error++;
		}
		return error/(i*1.0);
	}
	public static ArrayList<Double> validacion(EstrategiaParticionado part, Datos datos, Clasificador clas) {
		ArrayList<Double> res = new ArrayList<Double>();
		for (Particion p:part.crearPartciones(datos)){
			clas.entrenamiento(datos.getParticion( p.getTrain()));
			clas.clasifica(datos.getParticion( p.getTest()));
			Double e=Clasificador.error(datos.getParticion(p.getTest()), clas);
			res.add(e);
		}
		return res;
	}
	public static void main(String []args) {
		Datos d = Datos.cargaDeFichero("src/ficheros/tic-tac-toe.data");
		//Datos d = Datos.cargaDeFichero("src/ficheros/crx.data");
		
		EstrategiaParticionado part = new ValidacionCruzada(11);
		//EstrategiaParticionado part = new ValidacionSimple(11);
		
		Clasificador c = new ClasificadorNaiveBayes();
		
		System.out.println("Operando...");
		ArrayList<Double> errores = Clasificador.validacion(part, d, c);
		Double suma=0.0;
		for(Double e: errores){
			//System.out.println("Error de una prueba = "+e);
			suma = suma + e;
		}
		System.out.println("Error medio = "+suma/errores.size()*100+" %");
	}
}