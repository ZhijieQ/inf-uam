package clasificadores;
import datos.*;
import particionado.*;
import java.util.ArrayList;

abstract public class Clasificador {
	abstract public void entrenamiento (Datos datosTrain);
	abstract public ArrayList<Double> clasifica (Datos datosTest);
	public Boolean fLaplace;
	abstract public ArrayList<Double> getResultado();
	static int[][] confusion;
	static int prediccionesMal;
	public double[][] medias;
	public double[][] varianzas;
	public static double error (Datos datos, Clasificador clas) {
		int i=0, error=0;
		for(; i<datos.getNumDatos(); i++){
			//System.out.println("	Real: "+datos.getDato(i, datos.getSizeTipoAtributos()-1)+ "		Prediccion: "+ clas.getResultado().get(i)*1.0);
			if(datos.getDato(i, datos.getSizeTipoAtributos()-1) != clas.getResultado().get(i)*1.0){
				error++;
			}
			if (datos.getClasesValue(clas.getResultado().get(i))!=null)
				confusion[datos.getClasesValue(clas.getResultado().get(i))][datos.getClasesValue(datos.getDato(i, datos.getSizeTipoAtributos()-1))]++;
			else
				prediccionesMal++;
		}
		return error/(i*1.0);
	}
	public static ArrayList<Double> validacion(EstrategiaParticionado part, Datos datos, Clasificador clas) {
		confusion = new int[datos.getClases().size()][datos.getClases().size()];
		prediccionesMal = 0;
		int j=0,k=0;
		
		for(;j<datos.getClases().size();j++){
			for(;k<datos.getClases().size();k++){
				datos.getClases().keys().nextElement();
				confusion[j][k]=0;
			}	
		}
		ArrayList<Double> res = new ArrayList<Double>();
		for (Particion p:part.crearPartciones(datos)){
			clas.entrenamiento(datos.getParticion( p.getTrain()));
			clas.clasifica(datos.getParticion( p.getTest()));
			Double e=Clasificador.error(datos.getParticion(p.getTest()), clas);
			res.add(e);
		}
		return res;
	}
	
	public static void matrizConf(){
		System.out.println("Matriz de confusion:");
		for(int i=0;i<confusion.length;i++){
			for(int j=0;j<confusion.length;j++){
				System.out.print("["+confusion[i][j]+"]\t");
			}
			System.out.println();
		}
		System.out.println("Preddicciones sin sentido: "+prediccionesMal);
	}
	
	public static void main(String []args) {
		
		//Datos d = Datos.cargaDeFichero("src/ficheros/tic-tac-toe.data");
		Datos d = Datos.cargaDeFichero("src/ficheros/iris.data");
		
		EstrategiaParticionado part = new ValidacionCruzada(10);
		//EstrategiaParticionado part = new ValidacionSimple(80);
		
		Clasificador c = new ClasificadorNaiveBayesNorm(true);
		
		System.out.println("Operando...");
		ArrayList<Double> errores = Clasificador.validacion(part, d, c);
		Double suma=0.0;
		for(Double e: errores){
			System.out.println("Error de una prueba = "+e*100);
			suma = suma + e;
		}
		System.out.println("Error medio = "+suma/errores.size()*100+" %");
		matrizConf();
		
	}
}