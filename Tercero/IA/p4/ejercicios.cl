(setq *rule-list* '(
(R1 (pertenece ?E (?E . ?_)))
(R2 (pertenece ?E (?_ . ?Xs)) :- ((pertenece ?E ?Xs)))
(R3 (concatenar () ?L1 ?L1))
(R4 (concatenar ?L2 () ?L2))
(R5 (concatenar (?x . ?L1) ?L2 (?x . ?L3)) :- ((concatenar ?L1 ?L2 ?L3)))
(R6  (inorder nil ()))
(R7 (inorder (t ?nodo ?izq ?der) ?l) :- ((inorder ?izq ?lizq) (inorder ?der ?lder) (concatenar ?lizq (?nodo . ?lder) ?l)))
(R8 (start 0))
(R9 (arc 0 0 0))
(R10 (arc  0 0 1))
(R11 (arc 0 1 lambda))
(R12 (arc 0 2 1))
(R13 (arc 1 5 0))
(R14 (arc 1 2 1))
(R15 (arc 2 3 0))
(R16 (arc 3 4 lambda))
(R17 (arc 5 4 1))
(R18 (arc 4 3 0))
(R19 (final 3))
(R20 (final 4))
(R21 (accept ?q ()) :- ((final ?q)))
(R22 (accept ?q (?s . ?l)) :- ((arc ?q ?r ?s) (accept ?r ?l)))
(R23 (accept ?l) :- ((start ?q) (accept ?q ?l)))
(R24 (accept ?q ()) :- ((arc ?q ?r lambda) (final ?r))) 
(R25 (accept ?q (?s . ?l)) :- ((arc ?q ?r lambda) (accept ?r (?s . ?l))))
(R26 (count ?X () 0))
(R27 (count ?X (?X . ?L) ?N) :- ((count ?X ?L ?W) (?= ?N (?eval (+ ?W '1)))))
(R28 (count ?X (?Z . ?L) ?N) :- ((?= NIL (?eval (unify ?X ?Z))) (count ?X ?L ?N)))
(R29 (substitute ?X ?Y () ()))
(R30 (substitute ?X ?X ?L ?L))
(R31 (substitute ?X ?Y (?X . ?L) (?Y . ?S)) :- ((substitute ?X ?Y ?L ?S)))
(R32 (substitute ?X ?Y (?Z . ?L) (?Z . ?S)) :- ((substitute ?X ?Y ?L ?S) (?= NIL (?eval (unify ?X ?Z)))))))
