package grafo;

import java.util.*;

public class Graph<N, E> implements Collection<Node<N>>{

	public List<Node<N>> nodos = new ArrayList<Node<N>> ();
	public Map <Node<N>, List<Edge<E>>> map = new HashMap <Node<N>, List<Edge<E>>>();
	
	public boolean connect(Node<N> n1, E e, Node<N> n2){
		return false;
	}
	public boolean remove(Node<N> n){
		return false;
	}
	public boolean removeAll(Node<N> n){
		return false;
	}
	@Override
	public boolean add(Node<N> e) {
		if(nodos.contains(e))
			return false;
		nodos.add(e);
		return true;
	}

	@Override
	public boolean addAll(Collection<? extends Node<N>> c) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void clear() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean contains(Object o) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean containsAll(Collection<?> c) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Iterator<Node<N>> iterator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean remove(Object o) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean removeAll(Collection<?> c) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean retainAll(Collection<?> c) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Object[] toArray() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public <T> T[] toArray(T[] a) {
		// TODO Auto-generated method stub
		return null;
	}

}
